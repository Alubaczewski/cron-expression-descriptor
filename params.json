{"name":"Cron-expression-descriptor","tagline":"A C# library that converts cron expressions into human readable strings.","body":"# cron-expression-descriptor\r\nA C# library that converts cron expressions into localized human readable strings. The languages availabe are:\r\n\r\n * English (Brady Holt)\r\n * Brazilian (Renato Lima)\r\n * Spanish (Ivan Santos)\r\n\r\nAuthor: Brady Holt (http://www.geekytidbits.com)  \r\nLicense: MIT\r\n\r\n**Features**          \r\n\r\n * Supports all cron expression special characters including * / , - ? L W, #.\r\n * Supports 5, 6 (w/ seconds or year), or 7 (w/ seconds and year) part cron expressions.\r\n * Provides casing options (Sentence, Title, Lower, etc.)\r\n \r\n\r\n**Download**\r\n\r\nIf you want to get up and running quickly and just want the library in english, [visit the Downloads page](http://cron-expression-descriptor.s3.amazonaws.com/list.html) and download the latest CronExpressionDescriptor.dll library assembly.\r\n\r\n**Usage Examples (as Unit Tests)**  \r\n\r\n        [TestMethod]\r\n        public void TestEveryMinute()\r\n        {\r\n           Assert.AreEqual(\"Every minute\", ExpressionDescriptor.GetDescription(\"* * * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestEvery1Minute()\r\n        {\r\n            Assert.AreEqual(\"Every minute\", ExpressionDescriptor.GetDescription(\"*/1 * * * *\"));\r\n            Assert.AreEqual(\"Every minute\", ExpressionDescriptor.GetDescription(\"0 0/1 * * * ?\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestEveryHour()\r\n        {\r\n            Assert.AreEqual(\"Every hour\", ExpressionDescriptor.GetDescription(\"0 0 * * * ?\"));\r\n            Assert.AreEqual(\"Every hour\", ExpressionDescriptor.GetDescription(\"0 0 0/1 * * ?\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestTimeOfDayCertainDaysOfWeek()\r\n        {\r\n            Assert.AreEqual(\"At 11:00 PM, Monday through Friday\", ExpressionDescriptor.GetDescription(\"0 23 ? * MON-FRI\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestEverySecond()\r\n        {\r\n            Assert.AreEqual(\"Every second\", ExpressionDescriptor.GetDescription(\"* * * * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestEvery45Seconds()\r\n        {\r\n            Assert.AreEqual(\"Every 45 seconds\", ExpressionDescriptor.GetDescription(\"*/45 * * * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestEvery5Minutes()\r\n        {\r\n            Assert.AreEqual(\"Every 05 minutes\", ExpressionDescriptor.GetDescription(\"*/5 * * * *\"));\r\n            Assert.AreEqual(\"Every 10 minutes\", ExpressionDescriptor.GetDescription(\"0 0/10 * * * ?\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestEvery5MinutesOnTheSecond()\r\n        {\r\n            Assert.AreEqual(\"Every 05 minutes\", ExpressionDescriptor.GetDescription(\"0 */5 * * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestWeekdaysAtTime()\r\n        {\r\n            Assert.AreEqual(\"At 11:30 AM, Monday through Friday\", ExpressionDescriptor.GetDescription(\"30 11 * * 1-5\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestDailyAtTime()\r\n        {\r\n            Assert.AreEqual(\"At 11:30 AM\", ExpressionDescriptor.GetDescription(\"30 11 * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestMinuteSpan()\r\n        {\r\n            Assert.AreEqual(\"Every minute between 11:00 AM and 11:10 AM\", ExpressionDescriptor.GetDescription(\"0-10 11 * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestOneMonthOnly()\r\n        {\r\n            Assert.AreEqual(\"Every minute, only in March\", ExpressionDescriptor.GetDescription(\"* * * 3 *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestTwoMonthsOnly()\r\n        {\r\n            Assert.AreEqual(\"Every minute, only in March and June\", ExpressionDescriptor.GetDescription(\"* * * 3,6 *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestTwoTimesEachAfternoon()\r\n        {\r\n            Assert.AreEqual(\"At 02:30 PM and 04:30 PM\", ExpressionDescriptor.GetDescription(\"30 14,16 * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestThreeTimesDaily()\r\n        {\r\n            Assert.AreEqual(\"At 06:30 AM, 02:30 PM and 04:30 PM\", ExpressionDescriptor.GetDescription(\"30 6,14,16 * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestOnceAWeek()\r\n        {\r\n            Assert.AreEqual(\"At 09:46 AM, only on Monday\", ExpressionDescriptor.GetDescription(\"46 9 * * 1\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestDayOfMonth()\r\n        {\r\n            Assert.AreEqual(\"At 12:23 PM, on day 15 of the month\", ExpressionDescriptor.GetDescription(\"23 12 15 * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestMonthName()\r\n        {\r\n            Assert.AreEqual(\"At 12:23 PM, only in January\", ExpressionDescriptor.GetDescription(\"23 12 * JAN *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestDayOfMonthWithQuestionMark()\r\n        {\r\n            Assert.AreEqual(\"At 12:23 PM, only in January\", ExpressionDescriptor.GetDescription(\"23 12 ? JAN *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestMonthNameRange2()\r\n        {\r\n            Assert.AreEqual(\"At 12:23 PM, January through February\", ExpressionDescriptor.GetDescription(\"23 12 * JAN-FEB *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestMonthNameRange3()\r\n        {\r\n            Assert.AreEqual(\"At 12:23 PM, January through March\", ExpressionDescriptor.GetDescription(\"23 12 * JAN-MAR *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestDayOfWeekName()\r\n        {\r\n            Assert.AreEqual(\"At 12:23 PM, only on Sunday\", ExpressionDescriptor.GetDescription(\"23 12 * * SUN\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestDayOfWeekRange()\r\n        {\r\n            Assert.AreEqual(\"Every 05 minutes, at 03:00 PM, Monday through Friday\", ExpressionDescriptor.GetDescription(\"*/5 15 * * MON-FRI\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestDayOfWeekOnceInMonth()\r\n        {\r\n            Assert.AreEqual(\"Every minute, on the third Monday of the month\", ExpressionDescriptor.GetDescription(\"* * * * MON#3\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestLastDayOfTheWeekOfTheMonth()\r\n        {\r\n            Assert.AreEqual(\"Every minute, on the last Thursday of the month\", ExpressionDescriptor.GetDescription(\"* * * * 4L\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestLastDayOfTheMonth()\r\n        {\r\n            Assert.AreEqual(\"Every 05 minutes, on the last day of the month, only in January\", ExpressionDescriptor.GetDescription(\"*/5 * L JAN *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestTimeOfDayWithSeconds()\r\n        {\r\n            Assert.AreEqual(\"At 02:02:30 PM\", ExpressionDescriptor.GetDescription(\"30 02 14 * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestSecondInternvals()\r\n        {\r\n            Assert.AreEqual(\"Seconds 05 through 10 past the minute\", ExpressionDescriptor.GetDescription(\"5-10 * * * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestSecondMinutesHoursIntervals()\r\n        {\r\n            Assert.AreEqual(\"Seconds 05 through 10 past the minute, minutes 30 through 35 past the hour, between 10:00 AM and 12:00 PM\", ExpressionDescriptor.GetDescription(\"5-10 30-35 10-12 * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestEvery5MinutesAt30Seconds()\r\n        {\r\n            Assert.AreEqual(\"At 30 seconds past the minute, every 05 minutes\", ExpressionDescriptor.GetDescription(\"30 */5 * * * *\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestMinutesPastTheHourRange()\r\n        {\r\n            Assert.AreEqual(\"At 30 minutes past the hour, between 10:00 AM and 01:00 PM, only on Wednesday and Friday\", ExpressionDescriptor.GetDescription(\"0 30 10-13 ? * WED,FRI\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestSecondsPastTheMinuteInterval()\r\n        {\r\n            Assert.AreEqual(\"At 10 seconds past the minute, every 05 minutes\", ExpressionDescriptor.GetDescription(\"10 0/5 * * * ?\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestBetweenWithInterval()\r\n        {\r\n            Assert.AreEqual(\"Every 03 minutes, minutes 02 through 59 past the hour, at 01:00 AM, 09:00 AM, and 10:00 PM, between day 11 and 26 of the month, January through June\", ExpressionDescriptor.GetDescription(\"2-59/3 1,9,22 11-26 1-6 ?\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestRecurringFirstOfMonth()\r\n        {\r\n            Assert.AreEqual(\"At 06:00 AM\", ExpressionDescriptor.GetDescription(\"0 0 6 1/1 * ?\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestMinutesPastTheHour()\r\n        {\r\n            Assert.AreEqual(\"At 05 minutes past the hour\", ExpressionDescriptor.GetDescription(\"0 5 0/1 * * ?\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestOneYearOnlyWithSeconds()\r\n        {\r\n            Assert.AreEqual(\"Every second, only in 2013\", ExpressionDescriptor.GetDescription(\"* * * * * * 2013\"));\r\n        }\r\n        \r\n        [TestMethod]\r\n        public void TestOneYearOnlyWithoutSeconds()\r\n        {\r\n            Assert.AreEqual(\"Every minute, only in 2013\", ExpressionDescriptor.GetDescription(\"* * * * * 2013\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestTwoYearsOnly()\r\n        {\r\n            Assert.AreEqual(\"Every minute, only in 2013 and 2014\", ExpressionDescriptor.GetDescription(\"* * * * * 2013,2014\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestYearRange2()\r\n        {\r\n            Assert.AreEqual(\"At 12:23 PM, January through February, 2013 through 2014\", ExpressionDescriptor.GetDescription(\"23 12 * JAN-FEB * 2013-2014\"));\r\n        }\r\n\r\n        [TestMethod]\r\n        public void TestYearRange3()\r\n        {\r\n            Assert.AreEqual(\"At 12:23 PM, January through March, 2013 through 2015\", ExpressionDescriptor.GetDescription(\"23 12 * JAN-MAR * 2013-2015\"));\r\n        }","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}