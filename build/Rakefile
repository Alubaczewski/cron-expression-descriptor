#CronExpressionDescriptor
#Example usage: rake release[1.7.0,"Release notes here..."]

require 'rubygems'
require 'bundler/setup'

# require your gems as usual
require 'albacore'
require 'date'

project_name = "CronExpressionDescriptor"
project_title = "Cron Expression Descriptor"
project_owner = "Brady Holt"
project_authors = "Brady Holt, Renato Lima, Ivan Santos, Siarhei Khalipski, Mustafa SADEDİL, Star Peng, TotalMace, LbISS, Arnaud TAMAILLON, Michael Schuler, Taras(tbudurovych), rinaldihno"
project_description = "A library that converts cron expressions into human readable strings.  Supports 12 languages: English, Brazillian, Spanish, Norwgian, Turkish, Dutch, Chinese Simplified, Russian, French, German, Ukrainian and Italian."
project_copyright = "Copyright #{DateTime.now.strftime('%Y')}"

task :version, [:version_number, :notes] do |t, args|
	desc "Version the assembly"
  	assemblyinfo :version do |asm|
		asm.version = args.version_number
		asm.file_version = args.version_number
		asm.title = project_title
		asm.description = project_description
		asm.company_name = project_owner
		asm.copyright = project_copyright
		asm.input_file =  "..\\#{project_name}\\Properties\\AssemblyInfo.cs"
		asm.output_file = "..\\#{project_name}\\Properties\\AssemblyInfo.cs"
 	end
end

task :build, [:version_number, :notes] => [:build35, :build40, :build45] do |t, args|
end

task :build35, [:version_number, :notes]  do |t, args|
	desc 'Build the solution in the Release configuration'
	msbuild :build do |msb|
		msb.solution = "..\\#{project_name}\\#{project_name}.csproj"
		msb.targets = [ :Rebuild ]
		msb.properties = { :Configuration => 'Release 3.5' } 
 	end
end

task :build40, [:version_number, :notes]  do |t, args|
	desc 'Build the solution in the Release configuration'
	msbuild :build do |msb|
		msb.solution = "..\\#{project_name}\\#{project_name}.csproj"
		msb.targets = [ :Rebuild ]
		msb.properties = { :Configuration => 'Release 4.0' } 
 	end
end

task :build45, [:version_number, :notes]  do |t, args|
	desc 'Build the solution in the Release configuration'
	msbuild :build do |msb|
		msb.solution = "..\\#{project_name}\\#{project_name}.csproj"
		msb.targets = [ :Rebuild ]
		msb.properties = { :Configuration => 'Release 4.5' } 
 	end
end

task :package, [:version_number, :notes] => [:build] do |t, args|
	desc "create the nuget package"
	sh "xcopy /Y /S /EXCLUDE:exclude.txt ..\\#{project_name}\\bin\\Release\net35\ .\\pack\\lib\\net35\\"
	sh "xcopy /Y /S /EXCLUDE:exclude.txt ..\\#{project_name}\\bin\\Release\net40\ .\\pack\\lib\\net40\\"
	sh "xcopy /Y /S /EXCLUDE:exclude.txt ..\\#{project_name}\\bin\\Release\net45\ .\\pack\\lib\\net45\\"
	sh "nuget.exe pack .\\pack\\#{project_name}.nuspec -Properties \"version=#{args.version_number};title=#{project_title};owner=#{project_owner};authors=#{project_authors};description=#{project_description};notes=v#{args.version_number} - #{args.notes};copyright=#{project_copyright}\""
end

task :push, [:version_number, :notes] do |t, args|
	#apiKey assumed to be in %APPDATA%\Roaming\NuGet\NuGet.Config (set using 'nuget SetApiKey')
	sh "nuget.exe push #{project_name}.#{args.version_number}.nupkg"
end

task :tag, [:version_number, :notes] do |t, args|
	sh "git tag -a v#{args.version_number} -m \"#{args.notes}\""
	sh "git push --tags"
end

task :release, [:version_number, :notes] => [:version, :package, :push, :tag] do |t, args|
	puts "v#{args.version_number} Released!"
end
